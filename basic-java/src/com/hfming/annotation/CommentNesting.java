package com.hfming.annotation;

/**
 * 注释的嵌套 Demo
 * 文档注释与多行注释的区别: 文档注释的内容可以用于生成一个开发者文档。
 * 如果需要生成一个开发者文档需要使用到Java的开发工具 Javadoc.exe
 * 在 javadoc.exe 工具运行时可以将文档注释的内容抽取出来生成开发者文档
 * Javadoc的命令行使用格式: Javadoc  –d  存储文档的路径  Java的源文件。
 * 生成开发者文档要注意的细节：
 * 1. 如果一个类需要生成开发者文档，那么需要使用关键字public修饰该类，让该类是公共的。
 * 2. 文档注释一定要位于一个类的上方或者是一个方法的上方。否则注释的内容也没法抽取。
 *
 * @author hfm
 * @version 1.2 2020-01-14
 */
public class CommentNesting {
    /**
     * 文档注释:文档注释也是多行注释。
     * 文档注释的使用范围是类、成员变量、方法，一般不会用在方法内部
     * 文档注释不能嵌套使用多行注释，即文档注释与多行注释，但是可以嵌套使用单行注释
     * // 文档注释嵌套使用多行注释
     *
     * @param args
     */
    public static void main(String[] args) {
        /*
         * 多行注释：多行注释一般写在代码的上方，多行注释的使用方法一般用在方法内部使用
         * 多行注释不能用于注释类、方法、成员变量
         * 多行注释不能嵌套使用多行注释和文档注释，但是可以嵌套使用单行注释
         * // 多行注释嵌套使用单行注释
         */
        // 单行注释：一般方法内部的单行注释都是在写在代码的上方，方法外的在代码右方，多行注释一般写在代码的上方。
        // 单行注释不能嵌套使用多行注释，但是可以嵌套使用单行注释
        // // 单行注释可以嵌套使用单行注释
        System.out.println("Hello World !");
    }

    /**
     * 文档注释可以用于方法的注释
     * 在生成开发者文档时文档注释可以被抽取生成开发者文档
     */
    public void commentNesting() {

    }
}

